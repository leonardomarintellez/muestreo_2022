knitr::opts_chunk$set(echo = TRUE)
# Limpiar área de trabajo
rm(list = ls())
# Cargar librerías
suppressMessages(library(tidyverse))
library(ggplot2)
library(readr)
library(stringr)
library(haven)
suppressMessages(precios <- read_csv("/home/leonardo/Documentos/Acatlan/Datos/HousePrices/HousePrices.csv") %>% select(Id,SalePrice))
glimpse(precios)
set.seed(1234)
muestra_1 <-  precios %>%
sample_n(150) %>%
mutate(muestra = "muestra 1")
muestra_2 <-  precios %>%
arrange(SalePrice) %>%
slice(1:150) %>%
mutate(muestra = "muestra 2")
muestra_2 <-  precios %>%
arrange(SalePrice) %>%
slice(1:150) %>%
mutate(muestra = "muestra 2")
muestra_3 <-  precios %>%
arrange(SalePrice) %>%
slice(c(16:108,1370:1426)) %>%
mutate(muestra = "muestra 3")
muestras <- bind_rows(muestra_1,muestra_2,muestra_3)
muestras %>% group_by(muestra) %>% summarise(prom = mean(SalePrice) )
ggplot(muestras) +
geom_histogram(mapping = aes(x = SalePrice, alpha = .75)) +
facet_wrap(~muestra, scales = "free")
ggplot(precios) +
geom_histogram(mapping = aes(x = SalePrice, alpha = .75)) +
geom_vline(xintercept = mean(precios$SalePrice), color = "red") +
geom_vline(xintercept = mean(muestra_1$SalePrice), color = "blue")
ggplot(precios) +
geom_histogram(mapping = aes(x = SalePrice, alpha = .75)) +
geom_vline(xintercept = mean(precios$SalePrice), color = "red") +
geom_vline(xintercept = mean(muestra_2$SalePrice), color = "blue")
ggplot(precios) +
geom_histogram(mapping = aes(x = SalePrice, alpha = .75)) +
geom_vline(xintercept = mean(precios$SalePrice), color = "red") +
geom_vline(xintercept = mean(muestra_3$SalePrice), color = "blue")
funcion_prom_muestra <- function(datos,n=150) {
muestra <- sample_n(datos,n, replace = TRUE)
muestra %>% summarise(prom = mean(SalePrice), .groups = 'drop') %>%
pull(prom)
}
set.seed(4060)
distribucion_boostrap_1 <- rerun(1000,funcion_prom_muestra(muestra_1)) %>% flatten_dbl()
ggplot() +
geom_histogram(mapping = aes(x = distribucion_boostrap_1, alpha = .75)) +
geom_vline(xintercept = mean(precios$SalePrice), color = "red") +
geom_vline(xintercept = mean(distribucion_boostrap_1), color = "blue")
set.seed(4060)
distribucion_boostrap_2 <- rerun(1000,funcion_prom_muestra(muestra_2)) %>% flatten_dbl()
ggplot() +
geom_histogram(mapping = aes(x = distribucion_boostrap_2, alpha = .75)) +
geom_vline(xintercept = mean(precios$SalePrice), color = "red") +
geom_vline(xintercept = mean(distribucion_boostrap_2), color = "blue")
set.seed(4060)
distribucion_boostrap_3 <- rerun(1000,funcion_prom_muestra(muestra_3)) %>% flatten_dbl()
ggplot() +
geom_histogram(mapping = aes(x = distribucion_boostrap_3, alpha = .75)) +
geom_vline(xintercept = mean(precios$SalePrice), color = "red") +
geom_vline(xintercept = mean(distribucion_boostrap_3), color = "blue")
var <- muestra_1 %>% summarise(varianza = var(SalePrice)) %>% pull(varianza)
# No se está considerando el factor de ajuste por población finita
var_est <- (var/150) #* (1 - n/N)
## ee: error estándar
ee <- sqrt(var_est)
ee
alpha <- 0.05
z <- qnorm(1-alpha/2)
z
limite_inferior <- mean(muestra_1$SalePrice) - z*ee
limite_superior <- mean(muestra_1$SalePrice) + z*ee
c(limite_inferior,limite_superior)
limite_inferior <- quantile(distribucion_boostrap_1,0.025)
limite_superior <- quantile(distribucion_boostrap_1,0.975)
intervalo <- c(limite_inferior,limite_superior)
intervalo
ggplot() +
geom_histogram(mapping = aes(x = distribucion_boostrap_1, alpha = .75)) +
geom_vline(xintercept = quantile(distribucion_boostrap_1,0.025), color = "yellow") +
geom_vline(xintercept = quantile(distribucion_boostrap_1,0.975), color = "yellow")
ggplot(precios) +
geom_histogram(mapping = aes(x = SalePrice, alpha = .75)) +
geom_vline(xintercept = mean(precios$SalePrice), color = "red") +
geom_vline(xintercept = median(precios$SalePrice), color = "blue")
funcion_mediana_muestra <- function(datos,n=150) {
muestra <- sample_n(datos,n, replace = TRUE)
muestra %>% summarise(mediana = median(SalePrice), .groups = 'drop') %>%
pull(mediana)
}
set.seed(4060)
mediana_boostrap_1 <- rerun(1000,funcion_mediana_muestra(muestra_1)) %>% flatten_dbl()
ggplot() +
geom_histogram(mapping = aes(x = mediana_boostrap_1, alpha = .75)) +
geom_vline(xintercept = median(precios$SalePrice), color = "red") +
geom_vline(xintercept = median(mediana_boostrap_1), color = "blue")
knitr::opts_chunk$set(echo = TRUE)
# Limpiar área de trabajo
rm(list = ls())
# Cargar librerías
suppressMessages(library(tidyverse))
library(ggplot2)
library(readr)
library(stringr)
library(readxl)
library(haven)
columnas_datos <- c('user_id','item_id','rating','timestamp')
datos <- read_delim("~/Documentos/Acatlan/datos/MOVIELENS/ml-100k/u.data", delim = "\t", col_names = columnas_datos)
columnas_datos <- c('user_id','item_id','rating','timestamp')
datos <- read_delim("/home/leonardo/Documentos/Acatlan/Datos/MovieLens/ml-100k/u.data", delim = "\t", col_names = columnas_datos)
glimpse(datos)
columnas_movies <- c('item_id', 'title', 'release_date', 'video_release_date', 'imdb_url','unknown', 'Action', 'Adventure','Animation', 'Children\'s', 'Comedy', 'Crime', 'Documentary', 'Drama', 'Fantasy','Film-Noir', 'Horror', 'Musical', 'Mystery', 'Romance', 'Sci-Fi', 'Thriller', 'War', 'Western')
movies <- read_delim("/home/leonardo/Documentos/Acatlan/Datos/MovieLens/ml-100k/u.item", delim = "|", col_names = columnas_movies)
glimpse(movies)
ctmovies <- movies %>% select('item_id','title')
head(ctmovies)
ctmovies <- movies %>% select('item_id','title')
head(ctmovies)
movie_ratings <- left_join(datos,ctmovies, by = c("item_id"))
movie_ratings <- left_join(datos,ctmovies, by = c("item_id"))
movie_ratings %>% group_by(item_id, title) %>%
summarise(numero_calificaciones = n(), calificacion_promedio = mean(rating)) %>%
arrange(desc(calificacion_promedio)) %>%
head(20)
movie_ratings %>% group_by(item_id, title) %>%
summarise(numero_calificaciones = n(), calificacion_promedio = mean(rating)) %>%
arrange((calificacion_promedio)) %>%
head(20)
movie_ratings %>% group_by(item_id, title) %>%
summarise(numero_calificaciones = n(), calificacion_promedio = mean(rating)) %>%
arrange(desc(numero_calificaciones)) %>%
head(20)
movie_ratings %>% group_by(user_id) %>%
summarise(numero_calificaciones = n(), calificacion_promedio = mean(rating)) %>%
arrange(desc(numero_calificaciones)) %>%
head(20)
movie_ratings %>% group_by(item_id, title) %>%
summarise(numero_calificaciones = n()) %>%
ungroup() %>%
summarise(promedio = mean(numero_calificaciones))
movie_ratings %>% mutate(anio = str_extract(title, "\\d{4}")) %>%
head()
movie_ratings %>% mutate(anio = str_extract(title, "\\d+")) %>%
head()
movie_ratings %>% mutate(anio = str_extract(title, "\\d{4}")) %>%
group_by(anio) %>%
summarise(conteo= n())
movie_ratings %>%
summarise(numero_usuarios = n_distinct(user_id), número_películas = n_distinct(item_id))
movie_ratings %>%
# quitar duplicados
group_by(title) %>%
slice(1) %>%
ungroup() %>%
# crear la variable de año
mutate(anio = str_extract(title, "\\d{4}")) %>%
group_by(anio) %>%
summarise(conteo= n())
