
/*CON R Y PYTHON TENGO QUÍMICA, PERO CON SAS TENGO HISTORIA*/


/*MANIPULAR TABLAS DE DATOS*/

libname censo '~/my_shared_file_links/u60151886/Censo_2020';


/* LEER LAS PRIMERAS 500 OBSERVACIONES*/
DATA CERO;
SET CENSO.PERSONAS_09_A (FIRSTOBS=1 OBS=500);
RUN;


/*CREAR UN SUBCONJUNTO*/
DATA UNO ;
SET CERO (KEEP= ENT MUN EDAD SEXO ID_VIV ID_PERSONA);
ENT2=ENT+0;
IF 5<=EDAD<=130;
RUN;

* LA INSTRUCCIÓN KEEP ES PARA CONSERVAR SOLO LAS VARIABLES DE NUESTRO INTERES; (DROP);
* LA SENTENCIA IF ES PARA CONSERVAR LOS REGISTROS Q CUMPLAN CON LA CONDICION ESPECIFICADA;


* EJERCICIO: REVISAR LAS FUNCIONES INPUT Y PUT PARA CONVERTIR VARIABLES NUMERICAS Y ALFANUMERICAS;


/*CRAER NUEVAS VARIABLES*/
DATA DOS;
SET UNO;
* DEFINIR LA LONGITUD DE NUESTRA NUEVA VARIABLE;
LENGTH G_EDAD $ 2;
IF 5<=EDAD<=14 THEN G_EDAD='01';
    ELSE IF 15<=EDAD<=59 THEN G_EDAD='02';
    ELSE G_EDAD='03';
RUN;


/*ORDENAR UN CONJUNTO DE DATOS*/
PROC SORT DATA=DOS; 
	BY ENT ID_VIV; 

RUN;


PROC SORT DATA=DOS; BY DESCENDING ENT ID_VIV; RUN;

* EJERCICIO: REVISAR AYUDA DE PROC SORT;
	* CREAR UNA NUEVA TABLA ORDENADA SN MODIFICAR LA ORIGINAL;
	* ELIMINAR DUPLICADOS;
 

/*FIRST AND LAST*/
DATA TRES;
SET DOS;
BY ID_VIV; * ESTA SENTENCIA ES NECESARIA SI SE QUIERE HACER USO DE LAS VARIABLES FIRST Y LAST;
IF FIRST.ID_VIV THEN PRIMERA=1; 
IF LAST.ID_VIV THEN ULTIMA=1; ELSE ULTIMA=0;
RUN;


/*ELIMINAR MISSINGS DE UNA BASE*/
DATA CUATRO;
SET TRES;
IF MISSING(PRIMERA)=0; *EQUIVALENTE;
IF NOT MISSING(PRIMERA); *EQUIVALENTE;
IF MISSING(PRIMERA) THEN DELETE; *EQUIVALENTE;
RUN;




/*ALGUNAS FUNCIONES ÚTILES*/
DATA CINCO;
SET CUATRO;
ID=1;
INDICE = _N_;
PAR_IMPAR=MOD(_N_,2);
* _N_ ES UNA VARIABLE INTERNA QUE IDENTIFICA EL NUMERO DE REGISTROS;

/*SIMULAR UNA VARIABLE*/
U=RANUNI(2011); * EL PARAMETRO DE LA FUNCIÓN RANUNI ES LA SEMILLA;
LENGTH MONEDA $ 4;
IF U<0.5 THEN MONEDA="CARA"; ELSE MONEDA="CRUZ";
RUN;


* EJERCICIO;
* UTILIZAR LA BASE DE CARS Y CREAR UNA BASE DE APROXIMADAMENTE EL 10% DE LOS REGISTROS;

DATA _10PCT_CARS;
SET SASHELP.CARS;
U = RANUNI(2055);
IF U < 0.1;
RUN;


/*---------------------------------------------------------------------------------*/

/*SUMMARISES / AGGREGATES */

PROC FREQ DATA = CINCO;
TABLES MONEDA G_EDAD;
RUN;

/*SI NO QUEREMOS IMPRIMIR EL RESULTADO EN PANTALLA Y QUEREMOS GUARDAR LOS RESULTADOS EN UNA TABLA*/

PROC FREQ DATA = CINCO NOPRINT;
TABLE MONEDA / OUT=TABLA_VOLADOS;
RUN;


/*CROSSTAB*/

PROC FREQ DATA = CINCO;
TABLE G_EDAD*SEXO;
RUN;



/*NO ES RECOMENDABLE EJECUTAR UN PROC MEANS SIN ESPECIFICAR VARIABLES, PUEDE SER MUY COSTOSO COMPUTACIONALMENTE*/

PROC MEANS DATA = CERO;
RUN;



* EJECUTAR PROC MEANS POR BLOQUES DE VARIABLES;

/*ERROR*/
PROC MEANS DATA = CERO;
BY SEXO;
RUN;


/*OK. SE DEBE ORDENAR PRIMERO*/
PROC SORT DATA = CERO; BY SEXO; RUN;

PROC MEANS DATA = CERO N MEAN STD NMISS MIN MAX ;
BY SEXO;
WHERE EDAD < 999;
VAR EDAD;
RUN;

* INVESTIGAR SI LA DESVIACIÓN ESTANDAR CALCULADA ES A PARTIR DE LA VARIANZA INSESGADA O DE LA VARIANZA;

/*GUARDAR LOS RESULTADOS EN UN DATASET*/

PROC MEANS DATA = CERO NOPRINT;
OUTPUT OUT = EDAD_PROMEDIO  MEAN(EDAD) = EDAD_PROMEDIO;
BY SEXO;
WHERE EDAD <999;
VAR EDAD;
RUN;



/*---------------------------------------------------------------------------------*/

PROC CONTENTS DATA = CENSO.PERSONAS_09_A ; RUN;
PROC CONTENTS DATA = CENSO.VIVIENDAS_09_A ; RUN;
PROC CONTENTS DATA = CENSO.MIGRANTES_09_A ; RUN;


PROC CONTENTS DATA = CENSO.PERSONAS_09_A OUT = ESTRUCTURA_TABLA NOPRINT ; RUN;

PROC FREQ DATA = ESTRUCTURA_TABLA; 
TABLE TYPE;
RUN;



/*---------------------------------------------------------------------------------*/

DATA ALEATORIOS;
	DO INDICE = 1 TO 100;
		U=RANUNI(2020);
		OUTPUT;
	END;
RUN;













